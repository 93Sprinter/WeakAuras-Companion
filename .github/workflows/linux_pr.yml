name: Linux Build
on: pull_request

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node: ["13"]

    steps:
      - uses: actions/checkout@v2
      - name: Setup Node
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node }}

      - uses: actions/cache@v2
        id: cache-node
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - if: steps.cache-node.outputs.cache-hit != 'true'
        run: npm install

      - name: Lint
        run: npm run lint

      - name: Build
        run: npm run dist:pr

      - name: Package Artifacts
        run: |
          mkdir artifact-appimage
          mv dist_electron/*.AppImage artifact-appimage/ || true
          mkdir artifact-snap
          mv dist_electron/*.snap artifact-snap/ || true

      - uses: actions/upload-artifact@v2
        name: Upload AppImage
        with:
          name: WeakAuras-Companion-PR-Node${{ matrix.node }} AppImage
          path: artifact-appimage

      - uses: actions/upload-artifact@v2
        name: Upload Snap
        with:
          name: WeakAuras-Companion-PR-Node${{ matrix.node }} Snap
          path: artifact-snap

      - uses: actions/upload-artifact@v2
        name: Upload Tarball
        with:
          name: WeakAuras-Companion-PR-Node${{ matrix.node }} Tarball
          path: dist_electron/linux-unpacked
